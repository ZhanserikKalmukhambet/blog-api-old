Clean architecture in Go

Separated by slots

Inner slots don't have to know characteristics of outer slots

-----------------------------

Entities - database and web-frameworks - they doesn't affect on business logic

|

Use cases - slot between database and business logic

|

Controllers, Gateway, Presenters

|

Entities - Сущность - objects

-----------------------------

folder 1 -> "api" - all the related to api - example : routers
folder 2 -> "cmd" - database, services, server like http, gin, etc.
folder 3 -> "config" - all the thing that you can take from storage. Example : secret_keys, etc.
folder 4 -> "pkg" - docker file, .gitignore, also other tools
folder 5 -> "internal" - also folders --> "app", "service", "repository"

-----------------------------------

Gin is a web framework written in Go. It features a martini-like API with performance that is up to 40 times faster thanks to
httprouter. If you need performance and good productivity, you will love Gin.

-----------------------------------

Cleanenv is a Go (Golang) library that helps you parse environment variables and populate Go structs with their values.

-----------------------------

There are objects : Article, User, Category

User - Article --> One-To-Many --> One user can have several articles
Article - Category --> Many-To-Many --> One article can belongs to categories, one category can have several articles

-----------------------

Time.Time - is used to show time
Time.Duration - is used to measure time in nanoseconds